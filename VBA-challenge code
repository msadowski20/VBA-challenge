Sub stock_checker()

'Turn off screen updating while the code runs
Application.ScreenUpdating = False

'Declare global variables for the lookup table
Dim stockLookup As Worksheet, lastrowLookup As Long, lookupRange As Range

'Define global variables for the lookup table
'''Stock Lookup is the lookup sheet with the list of ticker symbols
'''lastrowLookup is the last row in the Stock Lookup sheet
'''lookupRange is the range to loop through for the ticker symbols
Set stockLookup = ThisWorkbook.Sheets("Stock Lookup")
Let lastrowLookup = stockLookup.Range("A1").End(xlDown).Row
Set lookupRange = stockLookup.Range("A1:A" & lastrowLookup)

    'Declare the cell and ws variables for the loop
    ''cell will refer to each Ticker Symbol in the Stock Lookup sheet
    ''ws will refer to each worksheet
    Dim cell As Range, ws As Worksheet
    
    'Start the loop through each worksheet in the workbook
    For Each ws In Worksheets
        
        'Activate the current worksheet
        ws.Activate
        
        'Check if the worksheet is visible or hidden, I only want it perform the loop on visible worksheets and exclude any hidden worksheets
        'The Stock Lookup sheet is a hidden sheet so I do not want to run the code on that worksheet
        If ws.Visible = True Then

            'Declare variables to be used in the current active worksheet that we are performing the code on
            Dim stockSymbol As String, lastrow As Double, summaryRow As Integer, yearlyChange As Double, stockVolume As Double, _
                stockOpen As Double, stockClose As Double, percentChange As Double, visibleLR As Double, visibleFR As Double, _
                dataRange As Range
            
            'Define variables in current active worksheet
            '''lastrow is the last row of the data in the current worksheet
            '''dataRange is the range of all the data in the worksheet
            Let lastrow = ws.Range("A1").End(xlDown).Row
            Set dataRange = ws.Range("A1:G" & lastrow)
            
            'Add the headers for the new summary data range
            ws.Range("I1").Value = "Ticker"
            ws.Range("J1").Value = "Yearly Change"
            ws.Range("K1").Value = "Percent Change"
            ws.Range("L1").Value = "Total Stock Volume"

            'Start the summaryRow counter at 2 so it doesn't overwrite the headers
            summaryRow = 2
            
                'Start the loop through each cell (Ticker Symbol) in the lookupRange
                For Each cell In lookupRange
                    
                    'Filter the data in the active worksheet in Column A on the Ticker Symbol
                    dataRange.AutoFilter field:=1, Criteria1:=cell
                    
                    'Check if there is any data for the current Ticker Symbol
                    If dataRange.Columns(1).SpecialCells(xlCellTypeVisible).Cells.Count > 1 Then
                        
                        'If there is data for the current Ticker Symbol, then add the Ticker Symbl to the summaryLastrow
                        ws.Range("I" & summaryRow).Value = cell
                        
                        'Within only the filtered data/visible cells
                        ''get the row number of the first visible row
                        ''set the stockOpen variable as the value of Column C and the visible first row
                        ''get the row number of the last visible row
                        ''set the stockClose variable as the value of Column F and the visible last row
                        With dataRange.SpecialCells(xlCellTypeVisible)
                            visibleFR = Range("C2:C" & lastrow).SpecialCells(xlCellTypeVisible).Row '**see reference below
                            stockOpen = ws.Range("C" & visibleFR).Value
                            visibleLR = Range("F" & Rows.Count).End(xlUp).Row
                            stockClose = ws.Range("F" & visibleLR).Value
                        End With
                        
                        'Set the yearlyChange variable as the stockClose price minus the stockOpen price
                        yearlyChange = stockClose - stockOpen
                        
                            'Error check if the stockOpen price is equal to 0, to avoid any divisible by 0 errors
                            If stockOpen = 0 Then
                                
                                'If stockOpen equals 0, then make the percentChange also equal 0
                                percentChange = "0"
        
                            Else
                                
                                'If stockOpen is not equal to 0, then calculate the percentChange variable
                                percentChange = (stockClose - stockOpen) / stockOpen
                                
                            End If
                            
                        'Use the sum function to add all of the stockVolume in the current visible range
                        stockVolume = Application.WorksheetFunction.Sum(ws.Range("G1:G" & lastrow).SpecialCells(xlCellTypeVisible))
                        
                        'Turn off the filters
                        dataRange.AutoFilter
                        
                        'Add the yearlyChange value to the summary range in Column J and the summary last row
                        'Add the percentChange value to the summary range in Column K and the summary last row and format the value to a percentage
                        'Add the stockVolume value to the summary range in Column L and the summary last row
                        ws.Range("J" & summaryRow).Value = yearlyChange
                        ws.Range("K" & summaryRow).Value = Format(percentChange, "Percent")
                        ws.Range("L" & summaryRow).Value = stockVolume
                        
                        'Conditionally Format the percentChange cell as Red if the value is less than 0
                        With ws.Range("J" & summaryRow).FormatConditions.Add(xlCellValue, xlLess, "=0")
                            .Interior.ColorIndex = 3
                        End With
    
                        'Conditionally Format the percentChange cell as Green if the value is greater than 0
                        With ws.Range("J" & summaryRow).FormatConditions.Add(xlCellValue, xlGreater, "=0")
                            .Interior.ColorIndex = 4
                        End With
                        
                        'Add +1 to the summaryRow counter so the previous data is not overwritten
                        summaryRow = summaryRow + 1
                        
                    'If there is no data for the current Ticker Symbol, then just turn off the filters
                    Else: dataRange.AutoFilter
                    
                    End If
                
                'and move on to the next Ticker Symbol
                Next cell
                
            'Declare variables to be used in the Challenge portion after all of the summary data is calculated
            Dim summaryLR As Double, changeMax As Double, changeMin As Double, volumeMax As Double, _
                minRange As Variant, maxRange As Variant, volumeRange As Variant

            'Set the last row for the summary data range
            summaryLR = ws.Range("I1").End(xlDown).Row

            'Add the headers and labels for the Challenge portion
            ws.Range("O2").Value = "Greatest % Increase"
            ws.Range("O3").Value = "Greatest % Decrease"
            ws.Range("O4").Value = "Greatest Total Volume"
            ws.Range("P1").Value = "Ticker"
            ws.Range("Q1").Value = "Value"
            
            'Find the Max of the percentChange range and set it to the variable changeMax
            'Find the Min of the percentChange range and set it to the variable changeMin
            'Find the Max of the stockVolume range and set it to the variable volumeMax
            changeMax = Application.WorksheetFunction.Max(ws.Range("K2:K" & summaryLR))
            changeMin = Application.WorksheetFunction.Min(ws.Range("K2:K" & summaryLR))
            volumeMax = Application.WorksheetFunction.Max(ws.Range("L2:L" & summaryLR))

            'Add the changeMax, changeMin and volumeMax values to the Challenge summary
            ws.Range("Q2").Value = changeMax
            ws.Range("Q3").Value = changeMin
            ws.Range("Q4").Value = volumeMax
            
            'Use the Match function to return the row number of the changeMax, changeMin and volumeMax values within the summary range
            'Set those values to the variables maxRange, minRange and volumeRange
            maxRange = Application.WorksheetFunction.Match(changeMax, ws.Range("K:K"), 0)
            minRange = Application.WorksheetFunction.Match(changeMin, ws.Range("K:K"), 0)
            volumeRange = Application.WorksheetFunction.Match(volumeMax, ws.Range("L:L"), 0)

            'Add the corresponding Ticker Symbols to the Challenge summary
            'by using the row number variables we just found and the Column 9 reference for the Ticker Symbol in the summary range
            ws.Range("P2") = Cells(maxRange, 9).Value
            ws.Range("P3") = Cells(minRange, 9).Value
            ws.Range("P4") = Cells(volumeRange, 9).Value
            
            'Auto adjust the width of the columns to fit the new data
            'Format the Greatest % Increase and Decrease values to percent
            ws.Columns("I:Q").AutoFit
            ws.Range("Q2:Q3").NumberFormat = "0.00%"

        End If
    
    'Move on to the next visible worksheet and perform the code in that worksheet
    Next ws
    
'Turn the screen updating back on before the code ends
Application.ScreenUpdating = True

End Sub

'**
'The first visible row code was the section that gave me the most trouble, I've never had to find that while uing VBA before
'I did search around for an answer but could not find anything definitive that fit my needs
'I used a couple sites I found and tried to put something together that worked
'''https://www.mrexcel.com/board/threads/select-first-visible-cell-under-the-header-row-after-applying-autofilter.562603/
'''https://www.extendoffice.com/documents/excel/4217-excel-find-value-of-first-visible-cell.html



